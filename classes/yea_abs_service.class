class yea_abs_service definition
  public
  abstract
  create public .

  public section.

    interfaces yea_service .
    interfaces if_http_extension .

    aliases copy
      for yea_service~copy .
    aliases delete
      for yea_service~delete .
    aliases get
      for yea_service~get .
    aliases head
      for yea_service~head .
    aliases link
      for yea_service~link .
    aliases lock
      for yea_service~lock .
    aliases options
      for yea_service~options .
    aliases patch
      for yea_service~patch .
    aliases post
      for yea_service~post .
    aliases propfind
      for yea_service~propfind .
    aliases purge
      for yea_service~purge .
    aliases put
      for yea_service~put .
    aliases root
      for yea_service~root .
    aliases unlink
      for yea_service~unlink .
    aliases unlock
      for yea_service~unlock .
    aliases use
      for yea_service~use .
    aliases view
      for yea_service~view .

    methods constructor .
  protected section.
  private section.

    data _routes type yea_intl_routes .
    data _allowed type stringtab .

    methods _prepare_request
      importing
        !sap_request     type ref to if_http_request
      returning
        value(returning) type ref to yea_request .
    methods _prepare_response
      importing
        !sap_response    type ref to if_http_response
      returning
        value(returning) type ref to yea_response .
    methods _match_paths
      importing
        !path            type string
        !method          type string
      returning
        value(returning) type yea_intl_routes .
    methods _path_to_regex
      importing
        !path            type string
      returning
        value(returning) type string .
    methods _method_allowed
      importing
        !method          type string
      returning
        value(returning) type abap_bool .
    methods _matched_path .
endclass.



class yea_abs_service implementation.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->CONSTRUCTOR
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method constructor.
    append yea_const=>method_get      to _allowed.
    append yea_const=>method_post     to _allowed.
    append yea_const=>method_put      to _allowed.
    append yea_const=>method_delete   to _allowed.
    append yea_const=>method_patch    to _allowed.
    append yea_const=>method_head     to _allowed.
    append yea_const=>method_copy     to _allowed.
    append yea_const=>method_options  to _allowed.
    append yea_const=>method_link     to _allowed.
    append yea_const=>method_purge    to _allowed.
    append yea_const=>method_lock     to _allowed.
    append yea_const=>method_unlock   to _allowed.
    append yea_const=>method_unlink   to _allowed.
    append yea_const=>method_propfind to _allowed.
    append yea_const=>method_view     to _allowed.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->IF_HTTP_EXTENSION~HANDLE_REQUEST
* +-------------------------------------------------------------------------------------------------+
* | [--->] SERVER                         TYPE REF TO IF_HTTP_SERVER
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method if_http_extension~handle_request.
    data(rq) = _prepare_request( server->request ).
    data(rs) = _prepare_response( server->response ).
    data headers type tihttpnvp.
    server->request->get_header_fields( changing fields = headers ).
    try.
        data(path) = headers[ name = '~path' ]-value.
        replace first occurrence of regex '\/$' in path with ''.
      catch cx_root.
    endtry.
    data(root_regex) = '^' && me->root( ).
    replace first occurrence of regex root_regex in path with ''.
    path = cl_http_utility=>if_http_utility~unescape_url( path ).
    data(method) = server->request->get_method( ).
    if ( _method_allowed( method ) = abap_false ).
      rs->set_status( 405 )->end( ).
      return.
    endif.

    data(matched_routes) = _match_paths( path = path method = method ).
    read table matched_routes transporting no fields with key method = method.
    if ( sy-subrc <> 0 and lines( matched_routes ) = 0 ).
      rs->set_status( 404 )->end( ).
      return.
    elseif ( sy-subrc <> 0 and lines( matched_routes ) > 0 ).
      rs->set_status( 405 )->end( ).
      return.
    endif.
    data(cast_server) = cast cl_http_server( server ).
    loop at matched_routes assigning field-symbol(<route>).
      " Prepare Arguments and change in request
      data(cast_request) = cast yea_base_request( rq ).
      cast_request->set_params(
        new yea_base_parameters(
          uri_arguments = <route>-path
          uri_request = path
        )
      ).
      "cast_request->set_query( new yea_base_query( '' ) ).
      data(do_next) = <route>-impl->execute( request = rq response = rs ).
      if ( do_next = abap_false ).
        if ( rs->finished( ) = abap_false ).
          rs->set_status( 400 )->end( ).
        endif.
        exit.
      endif.
    endloop.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~COPY
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~copy.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_copy
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~DELETE
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~delete.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_delete
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~GET
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~get.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_get
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~HEAD
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~head.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_head
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~LINK
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~link.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_link
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~LOCK
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~lock.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_lock
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~OPTIONS
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~options.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_options
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~PATCH
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~patch.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_patch
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~POST
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~post.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_post
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~PROPFIND
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~propfind.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_propfind
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~PURGE
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~purge.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_purge
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~PUT
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~put.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_put
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~ROOT
* +-------------------------------------------------------------------------------------------------+
* | [<-()] RETURNING                      TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~root.
    raise exception type cx_rs_not_implemented.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~UNLINK
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~unlink.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_unlink
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~UNLOCK
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~unlock.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_unlock
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~USE
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~use.
    append value yea_intl_route(
      path = path
      method = yea_const=>middleware_use
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method YEA_ABS_SERVICE->YEA_SERVICE~VIEW
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] ROUTE                          TYPE REF TO YEA_ROUTE
* | [<-()] RETURNING                      TYPE REF TO YEA_SERVICE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method yea_service~view.
    append value yea_intl_route(
      path = path
      method = yea_const=>method_view
      impl = route
      ) to me->_routes.
    returning = me.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method YEA_ABS_SERVICE->_MATCHED_PATH
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method _matched_path.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method YEA_ABS_SERVICE->_MATCH_PATHS
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [--->] METHOD                         TYPE        STRING
* | [<-()] RETURNING                      TYPE        YEA_INTL_ROUTES
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method _match_paths.
    data matching type yea_intl_routes.
    data in_path type string.
    in_path = path.
    split in_path at yea_const=>url_split into table data(route_split).
    data(route_count) = lines( route_split ).
    if ( route_count = 0 ).
      in_path = yea_const=>url_split.
    endif.

    loop at me->_routes assigning field-symbol(<route>) where ( method = method or method = 'USE' ).

      " Middleware with '*' applies to all routes
      if ( <route>-path   = yea_const=>wildcard and
           <route>-method = yea_const=>middleware_use ).
        append <route> to matching.
        continue.
      endif.

      data(rt_regex) = _path_to_regex( <route>-path ).

      " Exact Matches
      if ( <route>-path = in_path and <route>-method = method ).
        append <route> to matching.
        continue.
      elseif ( <route> is not initial and ( <route>-method = method or
                                            <route>-method = yea_const=>middleware_use ) ).
        " Check Regex match
        try.
            data matches type i.
            if ( <route>-method = yea_const=>middleware_use ).
              find all occurrences of regex rt_regex in path match count matches.
            else.
              if ( strlen( rt_regex ) > 0 ).
                rt_regex = rt_regex && '$'.
                find all occurrences of regex rt_regex in path match count matches.
              endif.
            endif.
            if ( matches > 0 ).
              append <route> to matching.
            endif.
            matches = 0.
          catch cx_sy_invalid_regex.
        endtry.
      endif.
    endloop.
    returning = matching.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method YEA_ABS_SERVICE->_METHOD_ALLOWED
* +-------------------------------------------------------------------------------------------------+
* | [--->] METHOD                         TYPE        STRING
* | [<-()] RETURNING                      TYPE        ABAP_BOOL
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method _method_allowed.
    read table _allowed with key table_line = method transporting no fields.
    if ( sy-subrc = 0 ).
      returning = abap_true.
    endif.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method YEA_ABS_SERVICE->_PATH_TO_REGEX
* +-------------------------------------------------------------------------------------------------+
* | [--->] PATH                           TYPE        STRING
* | [<-()] RETURNING                      TYPE        STRING
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method _path_to_regex.
    data path_splits type stringtab.
    split path at '/' into table path_splits.
    loop at path_splits assigning field-symbol(<ps>).
      if ( strlen( <ps> ) > 0 and <ps>+0(1) = ':' ).
        returning = returning && '\/' && yea_const=>url_rgx. "
      elseif ( <ps> is not initial ).
        returning = returning && '\/' && <ps>.
      endif.
    endloop.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method YEA_ABS_SERVICE->_PREPARE_REQUEST
* +-------------------------------------------------------------------------------------------------+
* | [--->] SAP_REQUEST                    TYPE REF TO IF_HTTP_REQUEST
* | [<-()] RETURNING                      TYPE REF TO YEA_REQUEST
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method _prepare_request.
    returning = new yea_base_request(
      sap_request = sap_request
      service_root = me->root( )
    ).
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method YEA_ABS_SERVICE->_PREPARE_RESPONSE
* +-------------------------------------------------------------------------------------------------+
* | [--->] SAP_RESPONSE                   TYPE REF TO IF_HTTP_RESPONSE
* | [<-()] RETURNING                      TYPE REF TO YEA_RESPONSE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method _prepare_response.
    returning = new yea_base_response( sap_response ).
  endmethod.
endclass.

